version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
        host_ip: 127.0.0.1
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always
    networks:
      - internal

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    env_file:
      - ./frontend/.env
    ports:
      - target: 80
        published: 3000
        protocol: tcp
        mode: host
        host_ip: 127.0.0.1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - internal

  redis:
    image: redis:7.2-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./backend/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_data:/data
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: host
        host_ip: 127.0.0.1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: always
    networks:
      - internal

networks:
  internal:
    internal: true

volumes:
  redis_data: 